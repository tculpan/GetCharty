CUSTOM TOOLBAR CONCEPTS AND IMPLEMENTATION GUIDE
==================================================

What is a Custom Toolbar?
-------------------------
A custom toolbar is your own set of buttons and controls that you create to replace or supplement Plotly's built-in mode bar. Instead of using Plotly's default toolbar, you design and position your own interface elements.

Key Components:
---------------

1. HTML Structure
   - A container div that holds all your toolbar buttons
   - Individual button elements for each function you want
   - Can be positioned anywhere on the page (top, bottom, side, floating)

2. CSS Styling
   - Controls the visual appearance (colors, fonts, borders, shadows)
   - Handles positioning (absolute, fixed, relative)
   - Manages responsive behavior (how it looks on different screen sizes)
   - Creates hover effects and animations

3. JavaScript Functionality
   - Event listeners that respond when users click buttons
   - Functions that perform specific actions (download, zoom, reset, etc.)
   - Integration with Plotly's API to control the chart
   - Custom logic for your specific needs

Common Custom Toolbar Features:
------------------------------

Download Functions:
- Save chart as PNG, SVG, or other formats
- Export data as CSV or JSON
- Take screenshots of the entire chart area

Chart Interaction:
- Zoom in/out buttons
- Pan controls
- Reset view to original state
- Auto-scale to fit data

Advanced Features:
- Fullscreen mode
- Share chart via URL
- Print functionality
- Custom data filtering
- Theme switching

Advantages of Custom Toolbar:
----------------------------

Design Control:
- Match your app's visual style exactly
- Use your own icons and branding
- Control button placement and layout

Functionality Control:
- Add features Plotly doesn't provide
- Remove features you don't want
- Create workflow-specific tools

User Experience:
- Simplify the interface for your users
- Add tooltips and help text
- Create guided interactions

Implementation Approach:
------------------------

1. Hide Default Toolbar
   - Set displayModeBar: false in Plotly config
   - This removes Plotly's built-in toolbar completely

2. Create Your Interface
   - Design your toolbar layout and styling
   - Position it where you want it on the page

3. Connect to Plotly
   - Use Plotly's API functions for chart control
   - Handle user interactions and update the chart accordingly

4. Test and Refine
   - Ensure all functions work correctly
   - Test on different devices and screen sizes
   - Optimize for your specific use case

Considerations:
--------------

Maintenance:
- You're responsible for keeping it working
- Need to update when Plotly releases new versions
- Must handle edge cases and errors

Complexity:
- More work than using the default toolbar
- Need to implement each feature yourself
- Requires understanding of Plotly's API

Flexibility:
- Can create exactly what you need
- Not limited by Plotly's design decisions
- Can integrate with your app's workflow

Technical Implementation Notes:
------------------------------

Plotly API Functions to Use:
- Plotly.downloadImage() - for saving charts
- Plotly.relayout() - for zooming, panning, resetting
- Plotly.restyle() - for changing chart properties
- Plotly.update() - for updating data and layout

Positioning Options:
- Absolute positioning for floating toolbars
- Fixed positioning for always-visible toolbars
- Relative positioning within containers
- CSS Grid/Flexbox for complex layouts

Responsive Design:
- Media queries for different screen sizes
- Touch-friendly button sizes on mobile
- Collapsible or sliding toolbars
- Icon-only buttons on small screens

Integration Points:
- Chart generation events
- Data loading states
- Error handling
- User preference storage

This approach gives you complete control over the user interface and functionality, but requires more development effort than using Plotly's built-in toolbar.
